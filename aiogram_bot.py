import asyncio
import random
from aiogram import Bot, Dispatcher, F, types
from aiogram.filters import Command
from aiogram.types import ChatPermissions

TOKEN = "7809092146:AAHt5mOUHHyl2Vzt1MI1UdA8nR6fU7iG3_U"
ADMIN_IDS = {7014503619}
warns = {}

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ç–æ–≤
with open("bad_words.txt", encoding="utf-8") as f:
    bad_words = set(word.strip().lower() for word in f if word.strip())

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥—ã
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.reply("–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω. –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")

@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    await message.reply("‚öôÔ∏è –ö–æ–º–∞–Ω–¥—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏:\n/ban /mute /warn /unwarn /kick\nüéÆ –ò–≥—Ä—ã: !–¥—É—ç–ª—å, !–∫—Ç–æ–∫—Ç–æ")

@dp.message(Command("ban"))
async def cmd_ban(message: types.Message):
    if message.reply_to_message:
        await bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        await message.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω.")

@dp.message(Command("mute"))
async def cmd_mute(message: types.Message):
    if message.reply_to_message:
        await bot.restrict_chat_member(
            message.chat.id,
            message.reply_to_message.from_user.id,
            permissions=ChatPermissions(can_send_messages=False)
        )
        await message.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—å—é—á–µ–Ω.")

@dp.message(Command("warn"))
async def cmd_warn(message: types.Message):
    if message.reply_to_message:
        user = message.reply_to_message.from_user
        warns[user.id] = warns.get(user.id, 0) + 1
        await message.reply(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {warns[user.id]} –¥–ª—è {user.first_name}")
        if warns[user.id] >= 3:
            await bot.ban_chat_member(message.chat.id, user.id)
            await message.reply(f"‚ùå {user.first_name} –∑–∞–±–∞–Ω–µ–Ω –∑–∞ 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.")

@dp.message(Command("unwarn"))
async def cmd_unwarn(message: types.Message):
    if message.reply_to_message:
        user = message.reply_to_message.from_user
        warns[user.id] = max(0, warns.get(user.id, 0) - 1)
        await message.reply(f"‚ÑπÔ∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å–Ω—è—Ç–æ. –¢–µ–∫—É—â–µ–µ: {warns[user.id]}")

@dp.message(Command("kick"))
async def cmd_kick(message: types.Message):
    if message.reply_to_message:
        await bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        await bot.unban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        await message.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∏–∫–Ω—É—Ç.")

@dp.message(Command("unlock3434"))
async def cmd_unlock(message: types.Message):
    if message.from_user.id in ADMIN_IDS:
        await message.reply("üîì –°–µ–∫—Ä–µ—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message(F.text)
async def message_handler(message: types.Message):
    text = message.text.lower()
    user = message.from_user

    # –ú–∞—Ç-—Ñ–∏–ª—å—Ç—Ä
    if any(bad_word in text for bad_word in bad_words):
        await message.delete()
        warns[user.id] = warns.get(user.id, 0) + 1
        await message.answer(f"üö´ –ú–∞—Ç! –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {warns[user.id]}")
        if warns[user.id] >= 3:
            await bot.ban_chat_member(message.chat.id, user.id)
            await message.answer(f"‚ùå {user.first_name} –∑–∞–±–∞–Ω–µ–Ω –∑–∞ 3 –Ω–∞—Ä—É—à–µ–Ω–∏—è.")
        return

    # –ò–≥—Ä—ã
    if "!–¥—É—ç–ª—å" in text:
        admins = await bot.get_chat_administrators(message.chat.id)
        names = [admin.user.first_name for admin in admins]
        if len(names) >= 2:
            await message.reply(f"‚öîÔ∏è –ü–æ–±–µ–¥–∏–ª: {random.choice(names)}")
    elif "!–∫—Ç–æ–∫—Ç–æ" in text:
        await message.reply(f"ü§î –≠—Ç–æ —Ç–æ—á–Ω–æ {user.first_name}!")

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    async def main():
        await dp.start_polling(bot)


    if __name__ == "__main__":
        asyncio.run(main())
